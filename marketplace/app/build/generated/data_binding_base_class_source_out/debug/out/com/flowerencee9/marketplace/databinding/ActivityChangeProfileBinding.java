// Generated by view binder compiler. Do not edit!
package com.flowerencee9.marketplace.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.flowerencee9.marketplace.R;
import com.flowerencee9.marketplace.support.customui.CustomToolbar;
import com.flowerencee9.marketplace.support.customui.InputView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChangeProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnChange;

  @NonNull
  public final InputView etAddress;

  @NonNull
  public final InputView etDOB;

  @NonNull
  public final InputView etEmail;

  @NonNull
  public final InputView etPhone;

  @NonNull
  public final CustomToolbar tbToolbar;

  private ActivityChangeProfileBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnChange, @NonNull InputView etAddress, @NonNull InputView etDOB,
      @NonNull InputView etEmail, @NonNull InputView etPhone, @NonNull CustomToolbar tbToolbar) {
    this.rootView = rootView;
    this.btnChange = btnChange;
    this.etAddress = etAddress;
    this.etDOB = etDOB;
    this.etEmail = etEmail;
    this.etPhone = etPhone;
    this.tbToolbar = tbToolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChangeProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChangeProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_change_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChangeProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnChange;
      Button btnChange = ViewBindings.findChildViewById(rootView, id);
      if (btnChange == null) {
        break missingId;
      }

      id = R.id.etAddress;
      InputView etAddress = ViewBindings.findChildViewById(rootView, id);
      if (etAddress == null) {
        break missingId;
      }

      id = R.id.etDOB;
      InputView etDOB = ViewBindings.findChildViewById(rootView, id);
      if (etDOB == null) {
        break missingId;
      }

      id = R.id.etEmail;
      InputView etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etPhone;
      InputView etPhone = ViewBindings.findChildViewById(rootView, id);
      if (etPhone == null) {
        break missingId;
      }

      id = R.id.tbToolbar;
      CustomToolbar tbToolbar = ViewBindings.findChildViewById(rootView, id);
      if (tbToolbar == null) {
        break missingId;
      }

      return new ActivityChangeProfileBinding((ConstraintLayout) rootView, btnChange, etAddress,
          etDOB, etEmail, etPhone, tbToolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
