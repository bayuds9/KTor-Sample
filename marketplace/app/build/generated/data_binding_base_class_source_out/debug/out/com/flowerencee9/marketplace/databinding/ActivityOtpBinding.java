// Generated by view binder compiler. Do not edit!
package com.flowerencee9.marketplace.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.flowerencee9.marketplace.R;
import com.flowerencee9.marketplace.support.customui.CustomToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOtpBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnOtp;

  @NonNull
  public final EditText inputOtp;

  @NonNull
  public final CustomToolbar tbToolbar;

  private ActivityOtpBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnOtp,
      @NonNull EditText inputOtp, @NonNull CustomToolbar tbToolbar) {
    this.rootView = rootView;
    this.btnOtp = btnOtp;
    this.inputOtp = inputOtp;
    this.tbToolbar = tbToolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOtpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOtpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_otp, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOtpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnOtp;
      Button btnOtp = ViewBindings.findChildViewById(rootView, id);
      if (btnOtp == null) {
        break missingId;
      }

      id = R.id.inputOtp;
      EditText inputOtp = ViewBindings.findChildViewById(rootView, id);
      if (inputOtp == null) {
        break missingId;
      }

      id = R.id.tbToolbar;
      CustomToolbar tbToolbar = ViewBindings.findChildViewById(rootView, id);
      if (tbToolbar == null) {
        break missingId;
      }

      return new ActivityOtpBinding((ConstraintLayout) rootView, btnOtp, inputOtp, tbToolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
