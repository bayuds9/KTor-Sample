// Generated by view binder compiler. Do not edit!
package com.flowerencee9.marketplace.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.flowerencee9.marketplace.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutMessageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout destContainer;

  @NonNull
  public final ConstraintLayout sendContainer;

  @NonNull
  public final TextView tvDestMsg;

  @NonNull
  public final TextView tvDestTimestamp;

  @NonNull
  public final TextView tvsendMsg;

  @NonNull
  public final TextView tvsendTimestamp;

  private LayoutMessageBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout destContainer, @NonNull ConstraintLayout sendContainer,
      @NonNull TextView tvDestMsg, @NonNull TextView tvDestTimestamp, @NonNull TextView tvsendMsg,
      @NonNull TextView tvsendTimestamp) {
    this.rootView = rootView;
    this.destContainer = destContainer;
    this.sendContainer = sendContainer;
    this.tvDestMsg = tvDestMsg;
    this.tvDestTimestamp = tvDestTimestamp;
    this.tvsendMsg = tvsendMsg;
    this.tvsendTimestamp = tvsendTimestamp;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutMessageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutMessageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_message, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutMessageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.destContainer;
      ConstraintLayout destContainer = ViewBindings.findChildViewById(rootView, id);
      if (destContainer == null) {
        break missingId;
      }

      id = R.id.sendContainer;
      ConstraintLayout sendContainer = ViewBindings.findChildViewById(rootView, id);
      if (sendContainer == null) {
        break missingId;
      }

      id = R.id.tvDestMsg;
      TextView tvDestMsg = ViewBindings.findChildViewById(rootView, id);
      if (tvDestMsg == null) {
        break missingId;
      }

      id = R.id.tvDestTimestamp;
      TextView tvDestTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (tvDestTimestamp == null) {
        break missingId;
      }

      id = R.id.tvsendMsg;
      TextView tvsendMsg = ViewBindings.findChildViewById(rootView, id);
      if (tvsendMsg == null) {
        break missingId;
      }

      id = R.id.tvsendTimestamp;
      TextView tvsendTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (tvsendTimestamp == null) {
        break missingId;
      }

      return new LayoutMessageBinding((ConstraintLayout) rootView, destContainer, sendContainer,
          tvDestMsg, tvDestTimestamp, tvsendMsg, tvsendTimestamp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
