// Generated by view binder compiler. Do not edit!
package com.flowerencee9.marketplace.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.flowerencee9.marketplace.R;
import com.flowerencee9.marketplace.support.customui.CustomToolbar;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentExploreBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout containerExplore;

  @NonNull
  public final LinearLayout containerPromo;

  @NonNull
  public final LinearLayout containerTop;

  @NonNull
  public final ExtendedFloatingActionButton fabToStore;

  @NonNull
  public final RecyclerView rvExplore;

  @NonNull
  public final RecyclerView rvPromo;

  @NonNull
  public final RecyclerView rvTop;

  @NonNull
  public final CustomToolbar tbSearch;

  @NonNull
  public final TextView titleLatest;

  @NonNull
  public final TextView titlePromo;

  @NonNull
  public final TextView titleTop;

  private FragmentExploreBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout containerExplore, @NonNull LinearLayout containerPromo,
      @NonNull LinearLayout containerTop, @NonNull ExtendedFloatingActionButton fabToStore,
      @NonNull RecyclerView rvExplore, @NonNull RecyclerView rvPromo, @NonNull RecyclerView rvTop,
      @NonNull CustomToolbar tbSearch, @NonNull TextView titleLatest, @NonNull TextView titlePromo,
      @NonNull TextView titleTop) {
    this.rootView = rootView;
    this.containerExplore = containerExplore;
    this.containerPromo = containerPromo;
    this.containerTop = containerTop;
    this.fabToStore = fabToStore;
    this.rvExplore = rvExplore;
    this.rvPromo = rvPromo;
    this.rvTop = rvTop;
    this.tbSearch = tbSearch;
    this.titleLatest = titleLatest;
    this.titlePromo = titlePromo;
    this.titleTop = titleTop;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentExploreBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentExploreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_explore, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentExploreBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.containerExplore;
      LinearLayout containerExplore = ViewBindings.findChildViewById(rootView, id);
      if (containerExplore == null) {
        break missingId;
      }

      id = R.id.containerPromo;
      LinearLayout containerPromo = ViewBindings.findChildViewById(rootView, id);
      if (containerPromo == null) {
        break missingId;
      }

      id = R.id.containerTop;
      LinearLayout containerTop = ViewBindings.findChildViewById(rootView, id);
      if (containerTop == null) {
        break missingId;
      }

      id = R.id.fabToStore;
      ExtendedFloatingActionButton fabToStore = ViewBindings.findChildViewById(rootView, id);
      if (fabToStore == null) {
        break missingId;
      }

      id = R.id.rvExplore;
      RecyclerView rvExplore = ViewBindings.findChildViewById(rootView, id);
      if (rvExplore == null) {
        break missingId;
      }

      id = R.id.rvPromo;
      RecyclerView rvPromo = ViewBindings.findChildViewById(rootView, id);
      if (rvPromo == null) {
        break missingId;
      }

      id = R.id.rvTop;
      RecyclerView rvTop = ViewBindings.findChildViewById(rootView, id);
      if (rvTop == null) {
        break missingId;
      }

      id = R.id.tbSearch;
      CustomToolbar tbSearch = ViewBindings.findChildViewById(rootView, id);
      if (tbSearch == null) {
        break missingId;
      }

      id = R.id.titleLatest;
      TextView titleLatest = ViewBindings.findChildViewById(rootView, id);
      if (titleLatest == null) {
        break missingId;
      }

      id = R.id.titlePromo;
      TextView titlePromo = ViewBindings.findChildViewById(rootView, id);
      if (titlePromo == null) {
        break missingId;
      }

      id = R.id.titleTop;
      TextView titleTop = ViewBindings.findChildViewById(rootView, id);
      if (titleTop == null) {
        break missingId;
      }

      return new FragmentExploreBinding((ConstraintLayout) rootView, containerExplore,
          containerPromo, containerTop, fabToStore, rvExplore, rvPromo, rvTop, tbSearch,
          titleLatest, titlePromo, titleTop);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
